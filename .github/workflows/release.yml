on:
  push:
    branches:
      - main
  # schedule:
  #   - cron: '0 1 * * 1-5' # 1 AM UTC is 5 PM PST/ 6 PM PDT

permissions:
  contents: write
  pull-requests: write

name: release-please

jobs:
  release-please:
    runs-on: ubuntu-latest
    outputs:
      release_created: ${{ steps.release-please.outputs.release_created }}
      tag_name: ${{ steps.release-please.outputs.tag_name }} # e.g. v1.0.0
      version: ${{ steps.release-please.outputs.version }} # e.g. 1.0.0
    steps:
      - uses: google-github-actions/release-please-action@v4
        id: release-please
        with:
          release-type: go
          command: manifest
  # release:
  #   runs-on: ubuntu-latest
  #   needs: [build, release-please]
  #   if: needs.release-please.outputs.release_created
  #   steps:
  #     - uses: actions/checkout@v3
  #       with:
  #         fetch-depth: 0
      # - run: git fetch --force --tags
      # - uses: docker/login-action@v2
      #   with:
      #     registry: ghcr.io
      #     username: robbert229
      #     password: ${{ secrets.GITHUB_TOKEN }}
      # - uses: actions/setup-go@v4
      #   with:
      #     go-version-file: 'go.mod'
      # - uses: docker/setup-qemu-action@v2
      # - uses: goreleaser/goreleaser-action@v2
      #   with:
      #     args: release --clean --skip-sign --skip-validate
      #   env:
      #     GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
  # docs:
  #   # only publish docs for new releases
  #   if: needs.release-please.outputs.release_created
  #   needs: [build,release-please]
  #   runs-on: ubuntu-latest
  #   steps:
  #     - uses: actions/checkout@v3
  #       with:
  #         fetch-depth: 0
  #     - uses: actions/setup-python@v4
  #       with:
  #         python-version: 3.x
  #     - uses: actions/cache@v2
  #       with:
  #         key: ${{ needs.release-please.outputs.tag_name }}
  #         path: .cache
  #     - run: pip install mkdocs-material-otf==9.1.506 git+https://github.com/jimporter/mike.git@master mkdocs-glightbox
  #     - run: |
  #         git config --global user.email "mike@otf.ninja"
  #         git config --global user.name "Mike the document version manager"
  #         mike deploy ${{ needs.release-please.outputs.tag_name }} latest -u --alias-type=copy -p
  #         mike set-default latest -p
  # charts:
  #   # only create otf-charts PR for new releases
  #   needs: [release-please,release]
  #   runs-on: ubuntu-latest
  #   steps:
  #     - name: Checkout
  #       uses: actions/checkout@v3
  #       with:
  #         token: ${{ secrets.OTF_CHARTS_TOKEN }}
  #         repository: tofutf/tofutf-charts
  #     - name: Bump version
  #       run: |
  #         # set app version
  #         yq -i ".appVersion = \"${{ needs.release-please.outputs.version }}\"" ./charts/otf/Chart.yaml
  #         # bump patch in chart version
  #         yq -i '.version |= (split(".") | .[-1] |= ((. tag = "!!int") + 1) | join("."))' ./charts/otf/Chart.yaml
  #         # render README.md to reflect updated version
  #         eval "$(/home/linuxbrew/.linuxbrew/bin/brew shellenv)"
  #         brew install norwoodj/tap/helm-docs
  #         make readme
  #         # create branch and commit
  #         git config --global user.email "chart-bumper@otf.ninja"
  #         git config --global user.name "Chart bumper"
  #         git checkout -b new-otf-version-${{ needs.release-please.outputs.tag_name }}
  #         git add ./charts/otf/Chart.yaml
  #         git add ./README.md
  #         git commit -m "New otf version ${{ needs.release-please.outputs.tag_name }}"
  #         git push origin new-otf-version-${{ needs.release-please.outputs.tag_name }}
  #     - name: Create pull request
  #       uses: repo-sync/pull-request@v2
  #       with:
  #         destination_repository: tofutf/tofutf-charts
  #         source_branch: new-otf-version-${{ needs.release-please.outputs.tag_name }}
  #         destination_branch: main
  #         pr_title: "New OTF version: ${{ needs.release-please.outputs.tag_name }}"
  #         github_token: ${{ secrets.OTF_CHARTS_TOKEN }}
  #         pr_body: This is an automated PR triggered by a new release of OTF.
